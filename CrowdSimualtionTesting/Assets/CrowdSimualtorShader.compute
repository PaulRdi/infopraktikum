// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel SetPositionsTex


struct Agent {
	float3 position;
	float3 orientation;
	float speed;
	float angularVelocity;
};



// Create a RenderTexture with enableRandomWrite flag and set it
RWTexture2D<float4> Result;
StructuredBuffer<Agent> Agents;
float4x4 INV_VP;
	

[numthreads(32,32,1)]
void SetPositionsTex(uint3 id : SV_DispatchThreadID)
{
	float dist = 10000000;
	//screen coordinates from (0 -> 1) or (0 -> textureWidth)
	float4 pixelWorldPos = mul(INV_VP, float4(id.x / 1024, id.y / 1024, 0, 0));
	//float4 pixelWorldPos = mul(INV_VP, float4(id.x, id.y ,0,0));
	//currently taking pixel distance from bottom left position of screen.
	for (int i = 0; i < Agents.Length; i++)
	{
		dist = min(dist, distance(pixelWorldPos.xyz, Agents[i].position));
	}

	if (dist < 1)
		Result[id.xy] = float4(1, 0, 1, 0);
}
